#!/usr/bin/env bash

ENV_FILE=".env"

# Unset all relevant environment variables to avoid contamination from the current shell
unset LENNY_HOST LENNY_PORT LCP_HOST LCP_PORT LCP_PUBLIC_BASE_URL
unset LCP_DB_NAME LCP_UPDATE_USER LCP_UPDATE_PASS LCP_HTPASSWD_USER LCP_HTPASSWD_PASS
unset LSD_HOST LSD_PORT LSD_PUBLIC_BASE_URL LSD_NOTIFY_USER LSD_NOTIFY_PASS
unset DB_USER DB_HOST DB_PORT DB_PASSWORD DB_NAME
unset S3_ACCESS_KEY S3_SECRET_KEY S3_ENDPOINT S3_PROVIDER S3_SECURE
unset READER_PORT READIUM_PORT LENNY_WORKERS LENNY_LOG_LEVEL LENNY_RELOAD LENNY_SSL_CRT LENNY_SSL_KEY

# Exit if the file already exists
if [ -f "$ENV_FILE" ]; then
  echo "$ENV_FILE already exists. No changes made."
  exit 0
fi

genpass() {
    len=${1:-32}
    dd if=/dev/urandom bs=1 count=$((len * 2)) 2>/dev/null | base64 | tr -dc 'A-Za-z0-9' | head -c "$len"
}

# Use environment variables if they are set, otherwise provide defaults or generate secure values
LENNY_HOST="localhost"
LENNY_PORT="${LENNY_PORT:-8080}"
LENNY_WORKERS="${LENNY_WORKERS:-1}"
LENNY_SEED="${LENNY_SEED:-$(genpass 32)}"
LENNY_LOG_LEVEL="${LENNY_LOG_LEVEL:-debug}"
LENNY_RELOAD="${LENNY_RELOAD:-1}"
LENNY_SSL_CRT="${LENNY_SSL_CRT:-}"
LENNY_SSL_KEY="${LENNY_SSL_KEY:-}"

READER_PORT="${READER_PORT:-3000}"
READIUM_PORT="${READIUM_PORT:-15080}"

LCP_HTPASSWD_USER="${LCP_HTPASSWD_USER:-admin}"
LCP_HTPASSWD_PASS="${LCP_HTPASSWD_PASS:-$(genpass 20)}"

LCP_HOST="${LCP_HOST:-0.0.0.0}"
LCP_PORT="${LCP_PORT:-8989}"
LCP_PUBLIC_BASE_URL="${LCP_PUBLIC_BASE_URL:-http://${LCP_HOST}:${LCP_PORT}/lcpserver}"
LCP_DB_NAME="${LCP_DB_NAME:-lcp}"

LSD_HOST="${LSD_HOST:-lsdserver}"
LSD_PORT="${LSD_PORT:-8990}"
LSD_PUBLIC_BASE_URL="${LSD_PUBLIC_BASE_URL:-http://${LSD_HOST}:${LSD_PORT}}"

NEXT_PUBLIC_ENABLE_MANIFEST_ROUTE="${NEXT_PUBLIC_ENABLE_MANIFEST_ROUTE:-true}"
NEXT_PUBLIC_MANIFEST_FORCE_ENABLE="${NEXT_PUBLIC_MANIFEST_FORCE_ENABLE:-true}"
NODE_ENV="${NODE_ENV:-production}"

DB_USER="${POSTGRES_USER:-librarian}"
DB_HOST="${POSTGRES_HOST:-127.0.0.1}"
DB_PORT="${POSTGRES_PORT:-5432}"

DB_PASSWORD="${POSTGRES_PASSWORD:-$(genpass 32)}"
DB_NAME="${DB_NAME:-lenny}"

S3_ACCESS_KEY="${MINIO_ROOT_USER:-$(genpass 20)}"
S3_SECRET_KEY="${MINIO_ROOT_PASSWORD:-$(genpass 40)}"
S3_ENDPOINT="${S3_ENDPOINT:-http://s3:9000}"

# Write to lenny.env
cat <<EOF > "$ENV_FILE"
# API
LENNY_PROXY=
LENNY_HOST=$LENNY_HOST
LENNY_PORT=$LENNY_PORT
LENNY_WORKERS=$LENNY_WORKERS
LENNY_SEED=$LENNY_SEED
LENNY_LOG_LEVEL=$LENNY_LOG_LEVEL
LENNY_RELOAD=$LENNY_RELOAD
LENNY_SSL_CRT=$LENNY_SSL_CRT
LENNY_SSL_KEY=$LENNY_SSL_KEY

# Reader
NEXT_PUBLIC_ENABLE_MANIFEST_ROUTE=$NEXT_PUBLIC_ENABLE_MANIFEST_ROUTE
NEXT_PUBLIC_MANIFEST_FORCE_ENABLE=$NEXT_PUBLIC_MANIFEST_FORCE_ENABLE
NODE_ENV=$NODE_ENV

# Service Ports
READER_PORT=$READER_PORT
READIUM_PORT=$READIUM_PORT

# LCP Server
LCP_HOST=$LCP_HOST
LCP_PORT=$LCP_PORT
LCP_PUBLIC_BASE_URL=$LCP_PUBLIC_BASE_URL
LCP_DB_NAME=$LCP_DB_NAME
LCP_UPDATE_USER=$LCP_HTPASSWD_USER
LCP_UPDATE_PASS=$LCP_HTPASSWD_PASS

# LCP Authentication
LCP_HTPASSWD_USER=$LCP_HTPASSWD_USER
LCP_HTPASSWD_PASS=$LCP_HTPASSWD_PASS

# LSD Server
LSD_HOST=$LSD_HOST
LSD_PORT=$LSD_PORT
LSD_PUBLIC_BASE_URL=$LSD_PUBLIC_BASE_URL
LSD_NOTIFY_USER=$LCP_HTPASSWD_USER
LSD_NOTIFY_PASS=$LCP_HTPASSWD_PASS

# DB
DB_USER=$DB_USER
DB_HOST=$DB_HOST
DB_PORT=$DB_PORT
DB_PASSWORD=$DB_PASSWORD
DB_NAME=$DB_NAME
DB_TYPE=postgres

# S3 Credentials
S3_ACCESS_KEY=$S3_ACCESS_KEY
S3_SECRET_KEY=$S3_SECRET_KEY
S3_ENDPOINT=$S3_ENDPOINT
S3_PROVIDER=minio
S3_SECURE=false

EOF
