services:

  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    container_name: lenny_api
    ports:
      - "${LENNY_PORT:-8080}:80"
    depends_on:
      db:
        condition: service_healthy
      s3:
        condition: service_healthy
    env_file: .env
    environment:
      - S3_ENDPOINT=s3:9000
      - DB_HOST=db
      - LENNY_PROXY=${LENNY_PROXY}
    volumes:
      - .:/app
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
    networks:
      - lenny_network

  db:
    image: postgres:16
    container_name: lenny_db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h localhost || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - lenny_network

  s3:
    image: minio/minio:latest
    container_name: lenny_s3
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - s3_data:/data
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 5
    networks:
      - lenny_network

  reader:
    build:
      context: .
      dockerfile: docker/reader/Dockerfile
    container_name: lenny_reader
    ports:
      - "${READER_PORT:-3000}"
    networks:
      - lenny_network

  readium:
    image: ghcr.io/readium/readium:0.2.1
    container_name: lenny_readium
    ports:
      - "${READIUM_PORT:-15080}"
    depends_on:
      - s3
      - api
    environment:
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_ENDPOINT: ${S3_ENDPOINT}
    volumes:
      - readium_data:/srv/publications
    command: >
      serve /srv/publications
      --s3-access-key ${S3_ACCESS_KEY}
      --s3-secret-key ${S3_SECRET_KEY}
      --s3-endpoint ${S3_ENDPOINT}
      --s3-use-path-style
      --address 0.0.0.0
      --debug
    networks:
      - lenny_network

networks:
  lenny_network:
    driver: bridge

volumes:
  db_data:
  s3_data:
  readium_data:
