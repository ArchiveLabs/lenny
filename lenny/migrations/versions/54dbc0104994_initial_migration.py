"""initial migration

Revision ID: 54dbc0104994
Revises: 
Create Date: 2025-04-18 14:34:10.332491

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '54dbc0104994'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('items',
    sa.Column('identifier', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('item_status', sa.String(length=20), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=False),
    sa.Column('is_readable', sa.Boolean(), nullable=False),
    sa.Column('is_lendable', sa.Boolean(), nullable=False),
    sa.Column('is_waitlistable', sa.Boolean(), nullable=False),
    sa.Column('is_printdisabled', sa.Boolean(), nullable=False),
    sa.Column('is_login_required', sa.Boolean(), nullable=False),
    sa.Column('num_lendable_total', sa.Integer(), nullable=False),
    sa.Column('current_num_lendable', sa.Integer(), nullable=False),
    sa.Column('current_waitlist_size', sa.Integer(), nullable=False),
    sa.Column('s3_public_path', sa.String(), nullable=True),
    sa.Column('s3_protected_path', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('identifier')
    )
    op.create_table('patrons',
    sa.Column('patron_id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('accessibility', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('patron_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('loans',
    sa.Column('loan_id', sa.String(length=50), nullable=False),
    sa.Column('item_identifier', sa.String(length=50), nullable=False),
    sa.Column('patron_id', sa.String(length=50), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expire_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('returned_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('license_id', sa.String(length=50), nullable=True),
    sa.Column('renewal_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_identifier'], ['items.identifier'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patron_id'], ['patrons.patron_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('loan_id')
    )
    op.create_table('notifications',
    sa.Column('notification_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('patron_id', sa.String(length=50), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['patron_id'], ['patrons.patron_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_table('waitlists',
    sa.Column('waitlist_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('item_identifier', sa.String(length=50), nullable=False),
    sa.Column('patron_id', sa.String(length=50), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['item_identifier'], ['items.identifier'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patron_id'], ['patrons.patron_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('waitlist_id'),
    sa.UniqueConstraint('item_identifier', 'patron_id', name='unique_waitlist')
    )
    op.create_table('licenses',
    sa.Column('license_id', sa.String(length=50), nullable=False),
    sa.Column('loan_id', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('content_id', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['loan_id'], ['loans.loan_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('license_id'),
    sa.UniqueConstraint('loan_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('licenses')
    op.drop_table('waitlists')
    op.drop_table('notifications')
    op.drop_table('loans')
    op.drop_table('patrons')
    op.drop_table('items')
    # ### end Alembic commands ###
